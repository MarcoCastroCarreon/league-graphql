# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type InfoType {
  attack: Int!
  defense: Int!
  magic: Int!
  difficulty: Int!
}

type ChampionStatsType {
  hp: Float!
  hpperlevel: Float!
  mp: Float!
  mpperlevel: Float!
  movespeed: Float!
  armor: Float!
  armorperlevel: Float!
  spellblock: Float!
  spellblockperlevel: Float!
  attackrange: Float!
  hpregen: Float!
  hpregenperlevel: Float!
  mpregen: Float!
  mpregenperlevel: Float!
  crit: Float!
  critperlevel: Float!
  attackdamage: Float!
  attackdamageperlevel: Float!
  attackspeedperlevel: Float!
  attackspeed: Float!
}

type ChampionType {
  version: String!
  id: ID!
  key: String!
  name: String!
  title: String!
  blurb: String!
  info: InfoType!
  tags: [String!]!
  partype: String!
  stats: ChampionStatsType!
}

type EffectType {
  Effect1Amount: String
  Effect2Amount: String
  Effect3Amount: String
  Effect4Amount: String
  Effect5Amount: String
  Effect6Amount: String
  Effect7Amount: String
  Effect8Amount: String
  Effect9Amount: String
  Effect10Amount: String
  Effect11Amount: String
  Effect12Amount: String
  Effect13Amount: String
  Effect14Amount: String
  Effect15Amount: String
  Effect16Amount: String
  Effect17Amount: String
  Effect18Amount: String
}

type GoldType {
  base: Int!
  purchasable: Boolean!
  total: Int!
  sell: Int!
}

type ItemImageType {
  full: String!
  sprite: String!
  group: String!
  x: Int!
  y: Int!
  w: Int!
  h: Int!
}

type MapsType {
  summonersRift: Boolean!
  howlingAbyss: Boolean!
}

type ItemStatsType {
  FlatHPPoolMod: Int
  FlatMagicDamageMod: Int
}

type ItemType {
  name: String!
  description: String!
  colloq: String!
  plaintext: String!
  specialRecipe: Int!
  inStore: Boolean
  image: ItemImageType!
  gold: GoldType!
  tags: [String!]!
  maps: MapsType!
  stats: ItemStatsType
  effect: EffectType
  depth: Int
}

type ChampionMasteryType {
  championPointsUntilNextLevel: String!
  chestGranted: Float!
  championId: ID!
  lastPlayTime: String!
  championLevel: Int!
  summonerId: ID!
  championPoints: Int!
  championPointsSinceLastLevel: String!
  tokensEarned: Int!
}

type SummonerType {
  profileIconId: ID!
  name: String!
  puuid: ID!
  summonerLevel: Int!
  revisionDate: String!
  id: ID!
  accountId: ID!
}

type Query {
  getChamps: [ChampionType!]!
  getChampionById(championId: String!): ChampionType!
  getItems: [ItemType!]!
  getSummonerByName(platform: String!, name: String!): SummonerType!
  getChampionsMasteryBySummonerId(platform: String!, summonerId: String!): [ChampionMasteryType!]!
}
